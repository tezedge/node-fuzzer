{
  "paths": {
    "/chains/{chain_id}/blocks/{block_id}/helpers/endorsing_rights": {
      "get": {
        "tags": [
          "chains"
        ],
        "description": "Retrieves the delegates allowed to endorse a block.\nBy default, it gives the endorsement slots for delegates that have at least one in the next block.\nParameters `level` and `cycle` can be used to specify the (valid) level(s) in the past or future at which the endorsement rights have to be returned. Parameter `delegate` can be used to restrict the results to the given delegates.\nReturns the list of endorsement slots. Also returns the minimal timestamps that correspond to these slots. The timestamps are omitted for levels in the past, and are only estimates for levels later that the next block, based on the hypothesis that all predecessor blocks were baked at the first priority.",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "A level integer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cycle",
            "in": "query",
            "description": "A cycle integer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delegate",
            "in": "query",
            "description": "A Secp256k1 of a Ed25519 public key hash (Base58Check-encoded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "level": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "delegate": {
                        "type": "string"
                      },
                      "slots": {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 65535
                        }
                      },
                      "estimated_time": {
                        "$ref": "#/components/schemas/timestamp.protocol"
                      }
                    },
                    "required": [
                      "level",
                      "delegate",
                      "slots"
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/chains/{chain_id}/blocks/{block_id}/helpers/baking_rights": {
      "get": {
        "tags": [
          "chains"
        ],
        "description": "Retrieves the list of delegates allowed to bake a block.\nBy default, it gives the best baking priorities for bakers that have at least one opportunity below the 64th priority for the next block.\nParameters `level` and `cycle` can be used to specify the (valid) level(s) in the past or future at which the baking rights have to be returned. When asked for (a) whole cycle(s), baking opportunities are given by default up to the priority 8.\nParameter `delegate` can be used to restrict the results to the given delegates. If parameter `all` is set, all the baking opportunities for each baker at each level are returned, instead of just the first one.\nReturns the list of baking slots. Also returns the minimal timestamps that correspond to these slots. The timestamps are omitted for levels in the past, and are only estimates for levels later that the next block, based on the hypothesis that all predecessor blocks were baked at the first priority.",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "A level integer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cycle",
            "in": "query",
            "description": "A cycle integer",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "delegate",
            "in": "query",
            "description": "A Secp256k1 of a Ed25519 public key hash (Base58Check-encoded)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "max_priority",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "level": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "delegate": {
                        "type": "string"
                      },
                      "priority": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65535
                      },
                      "estimated_time": {
                        "$ref": "#/components/schemas/timestamp.protocol"
                      }
                    },
                    "required": [
                      "level",
                      "delegate",
                      "priority"
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  }
}
